@model int

@using Microsoft.AspNetCore.Identity
@using FiTrack.Areas.Identity.Data
@inject SignInManager<FiTrackUser> SignInManager
@inject UserManager<FiTrackUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{

    <li>
        <div class="dropdown">
            <button class="btn dropdown-toggle" style="margin:2px; color:rgba(255,255,255,.5);" type="button" data-toggle="dropdown">@UserManager.GetUserAsync(User).Result.Name</button>
            <div class="dropdown-menu">

                <a class="dropdown-item">@{}</a>

                @*<a class="dropdown-item">@UserManager.GetUserAsync(User).Result</a>*@
                <a class="dropdown-item" id="manage" asp-area="Identity" asp-page="/Account/Manage/Index" title="Profile">Profile</a>
            </div>
        </div>
    </li>

    @*<li class="nav-item">
        <a id="manage" class="nav-link" style="margin:1px;" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserAsync(User).Result.Name</a>
    </li>*@
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
